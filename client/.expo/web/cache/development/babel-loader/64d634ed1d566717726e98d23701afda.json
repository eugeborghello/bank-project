{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\HenryBank\\\\bank-project\\\\client\\\\screens\\\\Login\\\\Login.tsx\";\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport IconPass from \"@expo/vector-icons/MaterialIcons\";\nimport styles from \"./styles\";\n\nvar Login = function Login() {\n  var URL = \"http://localhost:3001/user/login\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var handleEmail = function handleEmail(email) {\n    setEmail(email);\n  };\n\n  var handlePassword = function handlePassword(pass) {\n    setPassword(pass);\n  };\n\n  var handleLogin = function handleLogin() {\n    axios.post(URL, {\n      email: email,\n      password: password\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var submit = function submit() {\n    if (email === \"\" || password === \"\") {\n      setError(\"Email and Password cannot be empty\");\n      return false;\n    }\n\n    if (email) {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n      if (!pattern.test(email)) {\n        setError(\"Please enter a valid email address.\");\n        return false;\n      }\n    }\n\n    if (password.length) {\n      var pattern = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/);\n\n      if (!pattern.test(password)) {\n        setError(\"Password must contain minimum eight characters, at least one number and one special character\");\n        return false;\n      }\n    }\n\n    setError(\"\");\n    return Alert.alert(\"Successfully logged\");\n  };\n\n  return React.createElement(View, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/veski.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"), React.createElement(View, {\n    style: styles.emailInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"alternate-email\",\n    size: 18,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    style: styles.input,\n    onChangeText: handleEmail,\n    value: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.emailInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(IconPass, {\n    name: \"lock-outline\",\n    size: 18,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    style: styles.input,\n    secureTextEntry: true,\n    onChangeText: handlePassword,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, error && error), React.createElement(View, {\n    style: styles.loginButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.2,\n    onPress: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Login\"))), React.createElement(Text, {\n    style: {\n      margin: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"or\"), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonGStyle,\n    activeOpacity: 0.2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/icons/google.png\"),\n    style: styles.buttonImageIconStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.buttonIconSeparatorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Login with Google\")), React.createElement(View, {\n    style: styles.lowText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Not a member?\"), React.createElement(Link, {\n    to: \"/Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#4A47A3\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Register\"))), React.createElement(View, {\n    style: styles.lowText2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, React.createElement(Link, {\n    to: \"/Reset/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#4A47A3\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Forgot password?\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Usuario/HenryBank/bank-project/client/screens/Login/Login.tsx"],"names":["axios","React","useState","Link","Icon","IconPass","styles","Login","URL","email","setEmail","password","setPassword","error","setError","handleEmail","handlePassword","pass","handleLogin","post","then","res","console","log","catch","err","submit","pattern","RegExp","test","length","Alert","alert","root","logoContainer","logo","require","inputContainer","title","emailInput","input","loginButton","loginStyle","margin","container","buttonGStyle","buttonImageIconStyle","buttonIconSeparatorStyle","buttonTextStyle","lowText","color","lowText2"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,0BAArB;;;;;;;AASA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,GAAG,GAAG,kCAAZ;;AADkB,kBAGQN,QAAQ,CAAS,EAAT,CAHhB;AAAA;AAAA,MAGXO,KAHW;AAAA,MAGJC,QAHI;;AAAA,mBAIcR,QAAQ,CAAS,EAAT,CAJtB;AAAA;AAAA,MAIXS,QAJW;AAAA,MAIDC,WAJC;;AAAA,mBAKQV,QAAQ,CAAS,EAAT,CALhB;AAAA;AAAA,MAKXW,KALW;AAAA,MAKJC,QALI;;AAQlB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACN,KAAD,EAAgB;AAClCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAGA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAe;AACpCL,IAAAA,WAAW,CAACK,IAAD,CAAX;AACD,GAFD;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBlB,IAAAA,KAAK,CACFmB,IADH,CACQX,GADR,EACa;AACTC,MAAAA,KAAK,EAAEA,KADE;AAETE,MAAAA,QAAQ,EAAEA;AAFD,KADb,EAKGS,IALH,CAKQ,UAACC,GAAD,EAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH,EAQGG,KARH,CAQS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAVH;AAWD,GAZD;;AAeA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIjB,KAAK,KAAK,EAAV,IAAgBE,QAAQ,KAAK,EAAjC,EAAqC;AACnCG,MAAAA,QAAQ,CAAC,oCAAD,CAAR;AACA,aAAO,KAAP;AACD;;AACD,QAAIL,KAAJ,EAAW;AACT,UAAIkB,OAAO,GAAG,IAAIC,MAAJ,CACZ,iSADY,CAAd;;AAGA,UAAI,CAACD,OAAO,CAACE,IAAR,CAAapB,KAAb,CAAL,EAA0B;AACxBK,QAAAA,QAAQ,CAAC,qCAAD,CAAR;AACA,eAAO,KAAP;AACD;AACF;;AACD,QAAIH,QAAQ,CAACmB,MAAb,EAAqB;AACnB,UAAIH,OAAO,GAAG,IAAIC,MAAJ,CACZ,gEADY,CAAd;;AAGA,UAAI,CAACD,OAAO,CAACE,IAAR,CAAalB,QAAb,CAAL,EAA6B;AAC3BG,QAAAA,QAAQ,CACN,+FADM,CAAR;AAGA,eAAO,KAAP;AACD;AACF;;AACDA,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,WAAOiB,KAAK,CAACC,KAAN,CAAY,qBAAZ,CAAP;AACD,GA3BD;;AA6BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,IADhB;AAEE,IAAA,MAAM,EAAEC,OAAO,iCAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACgC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAACiC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAuC,IAAA,KAAK,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,KAAK,EAAEjC,MAAM,CAACkC,KAFhB;AAGE,IAAA,YAAY,EAAEzB,WAHhB;AAIE,IAAA,KAAK,EAAEN,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACiC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,cAAf;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,KAAK,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEjC,MAAM,CAACkC,KAFhB;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,YAAY,EAAExB,cAJhB;AAKE,IAAA,KAAK,EAAEL,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAsBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAAK,IAAIA,KAArC,CAtBF,EAyBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACmC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAEf,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACoC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CAzBF,EA+BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA/BF,EAkCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACsC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEtC,MAAM,CAACuC,YADhB;AAEE,IAAA,aAAa,EAAE,GAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAET,OAAO,iCADjB;AAEE,IAAA,KAAK,EAAE9B,MAAM,CAACwC,oBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAACyC,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,MAAM,CAAC0C,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,CADF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1C,MAAM,CAAC2C,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CAbF,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5C,MAAM,CAAC6C,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CApBF,CAlCF,CARF,CADF;AAwED,CApID;;AAsIA,eAAe3C,KAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\nimport IconPass from \"react-native-vector-icons/MaterialIcons\";\r\nimport styles from \"./styles\";\r\n\r\nconst Login = () => {\r\n  const URL = \"http://localhost:3001/user/login\";\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  // input handlers\r\n  const handleEmail = (email: any) => {\r\n    setEmail(email);\r\n  };\r\n  const handlePassword = (pass: any) => {\r\n    setPassword(pass);\r\n  };\r\n\r\n  // API call\r\n  const handleLogin = () => {\r\n    axios\r\n      .post(URL, {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Validation\r\n  const submit = () => {\r\n    if (email === \"\" || password === \"\") {\r\n      setError(\"Email and Password cannot be empty\");\r\n      return false;\r\n    }\r\n    if (email) {\r\n      var pattern = new RegExp(\r\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n      );\r\n      if (!pattern.test(email)) {\r\n        setError(\"Please enter a valid email address.\");\r\n        return false;\r\n      }\r\n    }\r\n    if (password.length) {\r\n      var pattern = new RegExp(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\r\n      );\r\n      if (!pattern.test(password)) {\r\n        setError(\r\n          \"Password must contain minimum eight characters, at least one number and one special character\"\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n    setError(\"\");\r\n    return Alert.alert(\"Successfully logged\");\r\n  };\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <View style={styles.logoContainer}>\r\n        <Image\r\n          style={styles.logo}\r\n          source={require(\"../../assets/images/veski.png\")}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <Text style={styles.title}>LOGIN</Text>\r\n        <View style={styles.emailInput}>\r\n          <Icon name='alternate-email' size={18} color='grey' />\r\n          <TextInput\r\n            placeholder='Email'\r\n            style={styles.input}\r\n            onChangeText={handleEmail}\r\n            value={email}\r\n          />\r\n        </View>\r\n        <View style={styles.emailInput}>\r\n          <IconPass name='lock-outline' size={18} color='grey' />\r\n          <TextInput\r\n            placeholder='Password'\r\n            style={styles.input}\r\n            secureTextEntry={true}\r\n            onChangeText={handlePassword}\r\n            value={password}\r\n          />\r\n        </View>\r\n\r\n        <Text style={styles.error}>{error && error}</Text>\r\n\r\n        {/* Login button */}\r\n        <View style={styles.loginButton}>\r\n          <TouchableOpacity activeOpacity={0.2} onPress={submit}>\r\n            <Text style={styles.loginStyle}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <Text style={{ margin: 12 }}>or</Text>\r\n\r\n        {/* Google button */}\r\n        <View style={styles.container}>\r\n          <TouchableOpacity\r\n            style={styles.buttonGStyle}\r\n            activeOpacity={0.2} /* onPress={()=>{}} */\r\n          >\r\n            <Image\r\n              source={require(\"../../assets/icons/google.png\")}\r\n              style={styles.buttonImageIconStyle}\r\n            />\r\n            <View style={styles.buttonIconSeparatorStyle} />\r\n            <Text style={styles.buttonTextStyle}>Login with Google</Text>\r\n          </TouchableOpacity>\r\n\r\n          <View style={styles.lowText}>\r\n            <Text>Not a member?</Text>\r\n            <Link to='/Register'>\r\n              <Text style={{ color: \"#4A47A3\" }}>Register</Text>\r\n            </Link>\r\n          </View>\r\n\r\n          <View style={styles.lowText2}>\r\n            <Link to='/Reset/'>\r\n              <Text style={{ color: \"#4A47A3\" }}>Forgot password?</Text>\r\n            </Link>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}